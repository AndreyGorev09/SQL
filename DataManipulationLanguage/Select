/* SELECT - 3 ФУНДАМЕНТАЛЬНЫЕ КОНЦЕПЦИИ */

1. PROJECTION - ВЫБОР СТОЛБЦОВ ИЗ ТАБЛИЦЫ:
SELECT имя_столбца_1, имя_столбца_2, имя_столбца_3 и т.д. FROM имя_таблицы;

2. SELECTION - ВЫБОР СТРОК ИЗ ТАБЛИЦЫ:
SELECT * FROM имя_таблицы WHERE имя_столбца оператор_сравнения шаблон_сравнения;
НАПРИМЕР: SELECT * FROM users WHERE id = 1;

3. JOINING - ОБЪЕДИНЕНИЕ СТОЛБЦОВ;



/* 1. КОНЦЕПЦИЯ PROJECTION: */
/* SELECT statement (НЕ МЕНЯЕТ ДАННЫЕ, ТОЛЬКО ИЗВЛЕКАЕТ ИХ) BASE SYNTAX: */
1. SELECT *  FROM table;
2. SELECT column(s) FROM table;


/* DISTINCT - ВЫВОД УНИКАЛЬНЫХ ЗНАЧЕНИЙ СОЛБЦА(ОВ) ИЗ ТАБЛИЦЫ */
/* SELECT DISTINCT column(s) FROM table; - СИНТАКСИС ЗАПИСИ */

SHOW DATABASES;
CREATE DATABASE distinct_db;
USE distinct_db;
CREATE TABLE distinct_func (
    distinct_id int auto_increment primary key,
    employees_id int not null,
    start_date date not null,
    end_date date not null,
    job_id varchar(20) not null,
    departament_id int not null);

INSERT INTO distinct_func VALUES
    (null, 102, '2022-10-16', '2022-11-16', 'it prog', 60),
    (null, 101, '1997-09-21', '2001-10-27', 'ac account', 100),
    (null, 101, '2001-10-28', '2005-03-15', 'ac mrg', 110),
    (null, 201, '2004-02-17', '2007-12-19', 'mk rep', 20),
    (null, 114, '2006-03-24', '2007-12-31', 'st clerk', 50),
    (null, 122, '2007-01-01', '2007-12-31', 'st clerk', 50),
    (null, 200, '1995-09-17', '2001-06-17', 'ad asst', 90),
    (null, 176, '2006-03-24', '2006-12-31', 'sa rep', 80),
    (null, 176, '2007-01-01', '2007-12-31', 'man', 80),
    (null, 200, '2002-07-01', '2006-12-31', 'ac account', 90);

SELECT * FROM distinct_func;
SELECT job_id FROM distinct_func;
SELECT DISTINCT job_id FROM distinct_func;
SELECT DISTINCT job_id, departament_id FROM distinct_func;


/* EXPRESSION IN SELECT LIST - ВЫРОЖЕНИЯ В SELECT LIST */
/* SELECT column(s), expression(s) FROM table; - СИНТАКСИС SELECT EXPRESSION */


/* TYPE INTEGER ПОДДЕРЖИВАЕТ ОПЕРАЦИИ:  +, -, *, /, () */
SELECT employees_id, employees_id*2 FROM distinct_func;
SELECT employees_id, departament_id, employees_id*2+departament_id FROM distinct_func;
SELECT job_id, employees_id, employees_id*1.5 FROM distinct_func;

/* TYPE VARCHAR ПОДДЕРЖИВАЕТ ОПЕРАЦИИ:  CONCAT,  */

ALTER TABLE distinct_func (
ADD COLUMN first_name TEXT NOT NULL,
ADD COLUMN last_name TEXT NOT NULL);

UPDATE dictinct_func SET first_name = 'andrey', last_name = 'gorev' WHERE disinct_id = 1;
UPDATE distinct_func SET first_name = 'petr', last_name = 'radko' WHERE disinct_id = 2;
UPDATE distinct_func SET first_name = 'misha', last_name = 'nemo' WHERE disinct_id = 3;
UPDATE distinct_func SET first_name = 'toly', last_name = 'esmus' WHERE disinct_id = 4;
UPDATE distinct_func SET first_name = 'kirill', last_name = 'tor' WHERE disinct_id = 5;
UPDATE distinct_func SET first_name = 'viktor', last_name = 'car' WHERE disinct_id = 6;
UPDATE distinct_func SET first_name = 'nikita', last_name = 'leo' WHERE disinct_id = 7;
UPDATE distinct_func SET first_name = 'ivan', last_name = 'ferma' WHERE disinct_id = 8;
UPDATE distinct_func SET first_name = 'evgen', last_name = 'messing' WHERE disinct_id = 9;
UPDATE distinct_func SET first_name = 'garik', last_name = 'lipskii' WHERE disinct_id = 10;
UPDATE distinct_func SET first_name = 'pavel', last_name = 'chig' WHERE disinct_id = 11;
UPDATE distinct_func SET first_name = 'hugo', last_name = 'porto' WHERE disinct_id = 12;
UPDATE distinct_func SET first_name = 'fill', last_name = 'kastro' WHERE disinct_id = 13;

SELECT CONCAT(first_name, last_name) FROM distinct_func;
SELECT CONCAT(first_name, employees_id) FROM distinct_func;
SELECT CONCAT('my name is ', first_name, ', my last name ', last_name) FROM distinct_func;


/* ALIAS - ЭТО АЛЬТЕРНАТИВНОЕ ИМЯ ДЛЯ СТОЛБЦА ИЛИ ЦЕЛОГО ВЫРОЖЕНИЯ */
SELECT first_name, last_name, CONCAT(my last name ', last_name) AS expresion FROM distinct_func;
ИЛИ
SELECT first_name, last_name, CONCAT(my last name ', last_name) expresion FROM distinct_func;

SELECT first_name, last_name, CONCAT(my last name ', last_name) AS 'my expresion' FROM distinct_func;
ИЛИ
SELECT first_name, last_name, CONCAT(my last name ', last_name) "my expresion" FROM distinct_func;


/* ТАБЛИЦА MY_DUAL ДЛЯ ВЫВОДА ТЕСТОВЫХ EXPRESSIONS */
CREATE TABLE my_dual (dummy VARCHAR(1));
INSERT INTO my_dual VALUES ('X');
SELECT CONCAT('ABC', 'XYZ', (30*90)) FROM my_dual;
SELECT CONCAT('PRIVET', ', MY NAME IS ANDREY!') AS greeting FROM my_dual;
SELECT CONCAT(36*365*24*60*60) AS 'moy vozrost v sekundax' FROM my_dual;


/* ЭКРАНИРОВАНИЕ В ТЕКСТОВЫХ ВЫРОЖЕНИЯХ */
SELECT 'It''s my life' FROM my_dual;
SELECT "It's my life" FROM my_dual;



/* 2. КОНЦЕПЦИЯ SELECTION: */
SELECT column(s) FROM table WHERE condition(s)-условие;

/* ОПЕРАТОР СРАВНЕНИЯ: =, >, <, >=, <=, <> OR != */

SELECT first_name, last_name FROM distinct_func WHERE id = 1;
SELECT first_name, last_name, job_id FROM distinct_func WHERE employees_id = 102;
SELECT * FROM distinct_func WHERE first_name = 'andrey';
SELECT first_name, last_name, job_id FROM distinct_func WHERE employees_id = 100+2;
SELECT * FROM distinct_func WHERE employees_id >= distinct_id + 100;
SELECT * FROM distinct_func WHERE end_date = '2022-11-16';


/* ОПЕРАТОР BETWEEN */
SELECT * FROM distinct_func WHERE employees_id BETWEEN 150 AND 200;
SELECT * FROM dictinct_func WHERE first_name BETWEEN 'a' and 'z';

/* ОПЕРАТОР IN */
SELECT * FROM dictinct_func WHERE distinct_id IN (1, 2, 3);
SELECT * FROM distinct_func WHERE first_name in ('andrey', 'petr', 'misha');

/* ОПЕРАТОР IS NULL */
ALTER TABLE distinct_func (ADD COLUMN is_null TEXT NULL);
UPDATE dictinct_func SET is_null = 'THIS IS NOT NULL' WHERE distinct_id IN (1,3,5,7,9,10,11);
SELECT * FROM dictinct_func WHERE is_null IS NULL;